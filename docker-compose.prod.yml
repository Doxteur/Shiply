services:
  api-prod:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: shiply-api-prod
    ports:
      - "12001:3333"
    env_file:
      - ./server/.env.prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3333
      - WORKSPACE_DIR=${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}:${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}
    networks:
      app-network:
        aliases:
          - api

  nginx-prod:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: shiply-nginx-prod
    ports:
      - "12002:80"
    restart: unless-stopped
    depends_on:
      - api-prod
    environment:
      - NGINX_PORT=80
    networks:
      - app-network

  runner-prod:
    image: oven/bun:1-alpine
    container_name: shiply-runner-prod
    working_dir: /app
    command: sh -lc "apk add --no-cache docker-cli docker-cli-compose && bun run src/index.ts"
    environment:
      - API_URL=http://api-prod:3333
      - RUNNER_NAME=runner-prod
    volumes:
      - ./runner:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}:${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}
    depends_on:
      - api-prod
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge


