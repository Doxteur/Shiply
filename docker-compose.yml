services:
  # Service API (AdonisJS)
  shiply-api-dev:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: shiply-api-dev
    ports:
      - "12000:3333"
    env_file:
      - ./server/.env
    restart: unless-stopped
    environment:
      - HOST=0.0.0.0
      - PORT=3333
      - WORKSPACE_DIR=${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}:${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}
    networks:
      app-network:
        aliases:
          - api

  # Reverse Proxy (Nginx) avec fichiers statiques
  nginx-dev:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: shiply-nginx-dev
    ports:
      - "12002:80"
    restart: unless-stopped
    depends_on:
      - shiply-api-dev
    networks:
      - app-network

  runner-dev:
    build:
      context: ./runner
      dockerfile: Dockerfile
    image: shiply-runner:dev
    container_name: shiply-runner-dev
    working_dir: /app
    environment:
      - API_URL=http://shiply-api-dev:3333
      - RUNNER_NAME=runner-dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}:${HOST_WORKSPACE_DIR:-/var/lib/shiply/workspace}
    depends_on:
      - shiply-api-dev
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
